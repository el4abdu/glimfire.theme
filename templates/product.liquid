{%- assign current_variant = product.selected_or_first_available_variant -%}

<div class="product-page">
  <!-- Breadcrumbs -->
  <div class="breadcrumbs">
    <a href="/">Home</a> / 
    <a href="/collections/{{ product.collection.handle }}">{{ product.collection.title }}</a> / 
    <span>{{ product.title }}</span>
  </div>

  <div class="product-container">
    <!-- Product Gallery -->
    <div class="product-gallery">
      <div class="gallery-container">
        <div class="main-image">
          <div class="image-wrapper">
            <img src="{{ product.featured_image | img_url: '1200x' }}" alt="{{ product.title }}" id="main-product-image" class="zoom-image">
            {% if product.tags contains "new" %}
              <div class="product-badge new">NEW</div>
            {% endif %}
            {% if product.compare_at_price > product.price %}
              <div class="product-badge sale">SALE</div>
            {% endif %}
          </div>
          
          <div class="gallery-controls">
            <button class="gallery-prev">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </button>
            <button class="gallery-next">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </button>
          </div>
        </div>
        
        {% if product.images.size > 1 %}
          <div class="thumbnail-slider">
            {% for image in product.images %}
              <div class="thumbnail{% if forloop.first %} active{% endif %}" data-index="{{ forloop.index0 }}" data-src="{{ image | img_url: '1200x' }}">
                <img src="{{ image | img_url: '150x' }}" alt="{{ product.title }} - Image {{ forloop.index }}">
              </div>
            {% endfor %}
          </div>
        {% endif %}
      </div>
    </div>

    <!-- Product Info -->
    <div class="product-info">
      <h1 class="product-title">{{ product.title }}</h1>
      
      <div class="product-meta">
        {% if product.vendor %}
          <span class="product-vendor">{{ product.vendor }}</span>
        {% endif %}
        
        <div class="product-rating">
          <div class="stars">
            <span class="star">â˜…</span>
            <span class="star">â˜…</span>
            <span class="star">â˜…</span>
            <span class="star">â˜…</span>
            <span class="star">â˜…</span>
          </div>
          <span class="rating-count">{{ product.metafields.reviews.rating_count | default: 24 }} reviews</span>
        </div>
      </div>
      
      <div class="product-price">
        {% if product.compare_at_price > product.price %}
          <span class="compare-price">{{ product.compare_at_price | money }}</span>
        {% endif %}
        <span class="current-price">{{ current_variant.price | money }}</span>
        {% if product.compare_at_price > product.price %}
          <span class="discount-badge">{{ product.compare_at_price | minus: product.price | times: 100.0 | divided_by: product.compare_at_price | round }}% OFF</span>
        {% endif %}
      </div>
      
      <!-- Product Form -->
      <form action="/cart/add" method="post" class="product-form">
        <input type="hidden" name="id" value="{{ current_variant.id }}">
        
        {% if product.variants.size > 1 %}
          <div class="variant-options">
            <label>Options</label>
            <div class="option-buttons">
              {% for variant in product.variants %}
                <button type="button" class="option-button{% if variant == current_variant %} active{% endif %}" data-variant-id="{{ variant.id }}">
                  {{ variant.title }}
                </button>
              {% endfor %}
            </div>
          </div>
        {% endif %}

        <div class="purchase-options">
          <div class="quantity-selector">
            <button type="button" class="qty-btn minus">âˆ’</button>
            <input type="number" id="quantity" name="quantity" value="1" min="1" aria-label="Quantity">
            <button type="button" class="qty-btn plus">+</button>
          </div>
          
          <button type="submit" class="add-to-cart">
            <span class="btn-text">Add to Cart</span>
            <svg class="btn-icon" width="24" height="24" viewBox="0 0 24 24" fill="none">
              <path d="M9 20a1 1 0 100 2 1 1 0 000-2zm9 0a1 1 0 100 2 1 1 0 000-2zM3 3h1l3.5 12h10l2.5-9H6.2M9 20a1 1 0 100 2 1 1 0 000-2zm9 0a1 1 0 100 2 1 1 0 000-2z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
        </div>
        
        <button type="button" class="buy-now-btn">Buy Now</button>
      </form>
      
      <!-- Product Features -->
      <div class="product-features">
        <div class="feature">
          <div class="feature-icon">ðŸšš</div>
          <div class="feature-text">Free shipping over $50</div>
        </div>
        <div class="feature">
          <div class="feature-icon">âš¡</div>
          <div class="feature-text">Fast delivery</div>
        </div>
        <div class="feature">
          <div class="feature-icon">ðŸ”„</div>
          <div class="feature-text">Easy returns</div>
        </div>
      </div>
      
      <!-- Collapsible Sections -->
      <div class="collapsible-sections">
        <div class="collapsible-section">
          <button class="section-toggle">
            <span>Description</span>
            <span class="toggle-icon">+</span>
          </button>
          <div class="section-content">
            <div class="product-description">
              {{ product.description }}
            </div>
          </div>
        </div>
        
        <div class="collapsible-section">
          <button class="section-toggle">
            <span>Specifications</span>
            <span class="toggle-icon">+</span>
          </button>
          <div class="section-content">
            <ul class="specs-list">
              {% for tag in product.tags %}
                <li>{{ tag }}</li>
              {% endfor %}
            </ul>
          </div>
        </div>
        
        <div class="collapsible-section">
          <button class="section-toggle">
            <span>Reviews</span>
            <span class="toggle-icon">+</span>
          </button>
          <div class="section-content">
            <div class="reviews-summary">
              <div class="average-rating">
                <span class="rating-number">4.9</span>
                <div class="rating-stars">â˜…â˜…â˜…â˜…â˜…</div>
                <span class="rating-count">Based on {{ product.metafields.reviews.rating_count | default: 24 }} reviews</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Related Products -->
  <div class="related-products">
    <h2 class="section-title">You May Also Like</h2>
    <div class="products-grid">
      {% for product in collections.all.products limit: 4 %}
        {% if product.handle != product.handle %}
          <div class="product-card">
            <div class="product-image">
              <img src="{{ product.featured_image | img_url: '400x' }}" alt="{{ product.title }}">
            </div>
            <h3 class="product-card-title">{{ product.title }}</h3>
            <span class="product-card-price">{{ product.price | money }}</span>
          </div>
        {% endif %}
      {% endfor %}
    </div>
  </div>
</div>

<style>
  .product-page {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 1.5rem 4rem;
  }
  
  .breadcrumbs {
    margin: 2rem 0;
    color: rgba(255, 255, 255, 0.6);
    font-size: 0.9rem;
  }
  
  .breadcrumbs a {
    color: rgba(255, 255, 255, 0.6);
    text-decoration: none;
    transition: color 0.2s ease;
  }
  
  .breadcrumbs a:hover {
    color: var(--text-color);
  }
  
  .product-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 3rem;
    margin-bottom: 4rem;
  }
  
  /* Gallery Styles */
  .product-gallery {
    position: sticky;
    top: 2rem;
    height: fit-content;
  }
  
  .gallery-container {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  
  .main-image {
    position: relative;
    border-radius: 20px;
    overflow: hidden;
    background: rgba(20, 20, 25, 0.5);
    box-shadow: 0 15px 25px rgba(0, 0, 0, 0.3);
  }
  
  .image-wrapper {
    position: relative;
    aspect-ratio: 1;
    overflow: hidden;
  }
  
  .zoom-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }
  
  .image-wrapper:hover .zoom-image {
    transform: scale(1.05);
  }
  
  .product-badge {
    position: absolute;
    top: 1rem;
    padding: 0.5rem 1rem;
    border-radius: 30px;
    font-size: 0.8rem;
    font-weight: bold;
    z-index: 1;
  }
  
  .product-badge.new {
    left: 1rem;
    background: linear-gradient(45deg, #00C9FF, #92FE9D);
    color: #111;
  }
  
  .product-badge.sale {
    right: 1rem;
    background: linear-gradient(45deg, #FF416C, #FF4B2B);
    color: white;
  }
  
  .gallery-controls {
    position: absolute;
    bottom: 1rem;
    right: 1rem;
    display: flex;
    gap: 0.5rem;
  }
  
  .gallery-prev,
  .gallery-next {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: rgba(0, 0, 0, 0.5);
    border: none;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .gallery-prev:hover,
  .gallery-next:hover {
    background: var(--primary-color);
  }
  
  .thumbnail-slider {
    display: flex;
    gap: 1rem;
    overflow-x: auto;
    scrollbar-width: none;
    padding-bottom: 0.5rem;
  }
  
  .thumbnail-slider::-webkit-scrollbar {
    display: none;
  }
  
  .thumbnail {
    flex: 0 0 80px;
    height: 80px;
    border-radius: 10px;
    overflow: hidden;
    cursor: pointer;
    opacity: 0.6;
    transition: all 0.2s ease;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  }
  
  .thumbnail.active,
  .thumbnail:hover {
    opacity: 1;
    transform: translateY(-5px);
  }
  
  .thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  /* Product Info Styles */
  .product-info {
    color: var(--text-color);
  }
  
  .product-title {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    background: linear-gradient(45deg, #FFD700, #FFA500);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  
  .product-meta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1.5rem;
  }
  
  .product-vendor {
    font-size: 1rem;
    opacity: 0.8;
  }
  
  .product-rating {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .stars {
    color: #FFD700;
    letter-spacing: 2px;
  }
  
  .rating-count {
    font-size: 0.9rem;
    opacity: 0.8;
  }
  
  .product-price {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 2rem;
  }
  
  .current-price {
    font-size: 1.8rem;
    font-weight: bold;
    background: linear-gradient(45deg, #FFD700, #FFA500);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  
  .compare-price {
    font-size: 1.2rem;
    color: rgba(255, 255, 255, 0.6);
    text-decoration: line-through;
  }
  
  .discount-badge {
    background: linear-gradient(45deg, #FF416C, #FF4B2B);
    color: white;
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: bold;
  }
  
  /* Form Styles */
  .product-form {
    margin-bottom: 2rem;
  }
  
  .variant-options {
    margin-bottom: 1.5rem;
  }
  
  .variant-options label {
    display: block;
    margin-bottom: 0.8rem;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 1px;
    opacity: 0.8;
  }
  
  .option-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 0.8rem;
  }
  
  .option-button {
    padding: 0.8rem 1.5rem;
    border-radius: 30px;
    border: 2px solid rgba(255, 215, 0, 0.3);
    background: transparent;
    color: white;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .option-button.active {
    border-color: #FFD700;
    background: rgba(255, 215, 0, 0.1);
  }
  
  .option-button:hover {
    background: rgba(255, 215, 0, 0.1);
  }
  
  .purchase-options {
    display: flex;
    gap: 1rem;
    margin-bottom: 1rem;
  }
  
  .quantity-selector {
    display: flex;
    align-items: center;
    flex: 0 0 140px;
    border-radius: 30px;
    overflow: hidden;
    border: 1px solid rgba(255, 255, 255, 0.2);
    background: rgba(30, 30, 35, 0.5);
  }
  
  .qty-btn {
    width: 40px;
    height: 50px;
    border: none;
    background: transparent;
    color: white;
    font-size: 1.2rem;
    cursor: pointer;
    transition: background 0.2s ease;
  }
  
  .qty-btn:hover {
    background: rgba(255, 255, 255, 0.1);
  }
  
  #quantity {
    width: 60px;
    border: none;
    background: transparent;
    color: white;
    text-align: center;
    font-size: 1rem;
    padding: 0;
    -moz-appearance: textfield;
  }
  
  #quantity::-webkit-outer-spin-button,
  #quantity::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  
  .add-to-cart {
    flex: 1;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.8rem;
    background: linear-gradient(45deg, #FFD700, #FFA500);
    border: none;
    border-radius: 30px;
    color: #111;
    font-weight: bold;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .add-to-cart:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 15px rgba(255, 215, 0, 0.3);
  }
  
  .btn-icon {
    width: 18px;
    height: 18px;
  }
  
  .buy-now-btn {
    width: 100%;
    height: 50px;
    background: transparent;
    border: 2px solid #FFD700;
    border-radius: 30px;
    color: #FFD700;
    font-weight: bold;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .buy-now-btn:hover {
    background: rgba(255, 215, 0, 0.1);
  }
  
  /* Product Features */
  .product-features {
    display: flex;
    justify-content: space-between;
    padding: 1.5rem 0;
    margin: 2rem 0;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .feature {
    display: flex;
    align-items: center;
    gap: 0.8rem;
  }
  
  .feature-icon {
    font-size: 1.5rem;
  }
  
  .feature-text {
    font-size: 0.9rem;
    opacity: 0.8;
  }
  
  /* Collapsible Sections */
  .collapsible-sections {
    margin-top: 2rem;
  }
  
  .collapsible-section {
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .section-toggle {
    width: 100%;
    padding: 1.5rem 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: transparent;
    border: none;
    color: white;
    font-size: 1.1rem;
    text-align: left;
    cursor: pointer;
  }
  
  .toggle-icon {
    font-size: 1.2rem;
    transition: transform 0.3s ease;
  }
  
  .section-toggle[aria-expanded="true"] .toggle-icon {
    transform: rotate(45deg);
  }
  
  .section-content {
    padding: 0 0 1.5rem;
    display: none;
  }
  
  .section-toggle[aria-expanded="true"] + .section-content {
    display: block;
  }
  
  .product-description {
    line-height: 1.7;
  }
  
  .specs-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  .specs-list li {
    position: relative;
    padding-left: 1.5rem;
    margin-bottom: 0.8rem;
    line-height: 1.5;
  }
  
  .specs-list li:before {
    content: "â€¢";
    position: absolute;
    left: 0;
    color: #FFD700;
  }
  
  .reviews-summary {
    text-align: center;
    padding: 1rem 0;
  }
  
  .average-rating {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
  }
  
  .rating-number {
    font-size: 3rem;
    font-weight: bold;
    background: linear-gradient(45deg, #FFD700, #FFA500);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  
  .rating-stars {
    font-size: 1.5rem;
    color: #FFD700;
  }
  
  /* Related Products */
  .related-products {
    margin-top: 4rem;
  }
  
  .section-title {
    text-align: center;
    font-size: 2rem;
    margin-bottom: 2rem;
    background: linear-gradient(45deg, #FFD700, #FFA500);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  
  .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 2rem;
  }
  
  .product-card {
    background: rgba(30, 30, 35, 0.4);
    border-radius: 15px;
    overflow: hidden;
    transition: transform 0.3s ease;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  }
  
  .product-card:hover {
    transform: translateY(-10px);
  }
  
  .product-card .product-image {
    aspect-ratio: 1;
  }
  
  .product-card .product-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .product-card-title {
    padding: 1rem 1rem 0.5rem;
    font-size: 1.1rem;
    margin: 0;
  }
  
  .product-card-price {
    padding: 0 1rem 1rem;
    display: block;
    color: #FFD700;
  }
  
  /* Responsive Styles */
  @media (max-width: 992px) {
    .product-container {
      grid-template-columns: 1fr;
      gap: 2rem;
    }
    
    .product-gallery {
      position: static;
    }
  }
  
  @media (max-width: 768px) {
    .purchase-options {
      flex-direction: column;
    }
    
    .quantity-selector {
      width: 100%;
      flex: initial;
    }
    
    .product-features {
      flex-direction: column;
      gap: 1rem;
    }
    
    .products-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media (max-width: 480px) {
    .products-grid {
      grid-template-columns: 1fr;
    }
    
    .product-title {
      font-size: 2rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Image gallery
    const mainImage = document.getElementById('main-product-image');
    const thumbnails = document.querySelectorAll('.thumbnail');
    const galleryPrev = document.querySelector('.gallery-prev');
    const galleryNext = document.querySelector('.gallery-next');
    let currentImageIndex = 0;
    
    // Initialize thumbnails
    thumbnails.forEach(thumb => {
      thumb.addEventListener('click', function() {
        const newSrc = this.getAttribute('data-src');
        const index = parseInt(this.getAttribute('data-index'));
        
        updateActiveImage(index);
      });
    });
    
    // Gallery navigation
    if (galleryPrev && galleryNext) {
      galleryPrev.addEventListener('click', function() {
        let newIndex = currentImageIndex - 1;
        if (newIndex < 0) newIndex = thumbnails.length - 1;
        updateActiveImage(newIndex);
      });
      
      galleryNext.addEventListener('click', function() {
        let newIndex = currentImageIndex + 1;
        if (newIndex >= thumbnails.length) newIndex = 0;
        updateActiveImage(newIndex);
      });
    }
    
    function updateActiveImage(index) {
      currentImageIndex = index;
      const src = thumbnails[index].getAttribute('data-src');
      
      // Animate image change
      mainImage.style.opacity = '0';
      setTimeout(() => {
        mainImage.src = src;
        mainImage.style.opacity = '1';
      }, 300);
      
      // Update active thumbnail
      thumbnails.forEach(t => t.classList.remove('active'));
      thumbnails[index].classList.add('active');
      
      // Scroll thumbnail into view if needed
      thumbnails[index].scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'center' });
    }
    
    // Quantity selector
    const minusBtn = document.querySelector('.qty-btn.minus');
    const plusBtn = document.querySelector('.qty-btn.plus');
    const quantityInput = document.getElementById('quantity');
    
    minusBtn.addEventListener('click', function() {
      const currentValue = parseInt(quantityInput.value);
      if (currentValue > 1) {
        quantityInput.value = currentValue - 1;
      }
    });
    
    plusBtn.addEventListener('click', function() {
      const currentValue = parseInt(quantityInput.value);
      quantityInput.value = currentValue + 1;
    });
    
    // Variant selection
    const variantButtons = document.querySelectorAll('.option-button');
    const variantIdInput = document.querySelector('input[name="id"]');
    
    variantButtons.forEach(button => {
      button.addEventListener('click', function() {
        const variantId = this.getAttribute('data-variant-id');
        
        // Update active state
        variantButtons.forEach(b => b.classList.remove('active'));
        this.classList.add('active');
        
        // Update form value
        variantIdInput.value = variantId;
      });
    });
    
    // Collapsible sections
    const toggleButtons = document.querySelectorAll('.section-toggle');
    
    toggleButtons.forEach(button => {
      button.setAttribute('aria-expanded', 'false');
      
      button.addEventListener('click', function() {
        const expanded = this.getAttribute('aria-expanded') === 'true';
        this.setAttribute('aria-expanded', !expanded);
      });
    });
    
    // Open first section by default
    if (toggleButtons.length > 0) {
      toggleButtons[0].setAttribute('aria-expanded', 'true');
    }
    
    // Image zoom effect
    if (mainImage) {
      mainImage.addEventListener('mousemove', function(e) {
        const { left, top, width, height } = this.getBoundingClientRect();
        const x = (e.clientX - left) / width;
        const y = (e.clientY - top) / height;
        
        this.style.transformOrigin = `${x * 100}% ${y * 100}%`;
      });
    }
  });
</script> 